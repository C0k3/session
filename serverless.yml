# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: my-idp # NOTE: update this with your service name

provider:
  name: aws
  runtime: nodejs4.3
  #profile: ko-playground-admin
  
# you can overwrite defaults here
#  stage: dev
#  region: us-east-1

  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "dynamodb:*"
      Resource: "*"

plugins:
  - create-function

custom:
  IamRoleArnForCreate: arn:aws:iam::665342856034:role/ko-playground-dev-iam-profile-AppSrvrRole-1NEYAB5I2WX2B

package:
  exclude:
    - gulpfile.js
    - lambda_functions/**/*.test.js

functions:
  ping:
    handler: handler.ping
    events:
      - http:
          path: ping
          method: get
  myTest:
    handler: handler.myTest
    events:
      - http:
          path: myTest
          method: get
  getSession:
    handler: handler.getSession
    events:
        - http: 
            path: session
            method: GET
            authorizer: 
              name: authorizer
              resultTtlInSeconds: 3
              identitySource: method.request.header.Authorization
  createUser:
    handler: handler.createUser
    events:
        - http: 
            path: user
            method: POST
            authorizer: 
              name: clientIdAuthorizer
              resultTtlInSeconds: 3
              identitySource: method.request.header.X-koms-clientid
  authorizer:
    handler: handler.authorizer
  clientIdAuthorizer:
    handler: handler.clientIdAuthorizer

#    you can add any of the following events
#    events:
#      - http:
#          path: users/create
#          method: get
#      - s3: ${env:BUCKET}
#      - schedule: rate(10 minutes)
#      - sns: greeter-topic

resources:
  Resources:
    UserTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
        - AttributeName: Password
          AttributeType: S
        - AttributeName: UserName
          AttributeType: S
        - AttributeName: Id
          AttributeType: S
        GlobalSecondaryIndexes:
        - IndexName: Password-index
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput:
            WriteCapacityUnits: 5
            ReadCapacityUnits: 5
          KeySchema:
          - KeyType: HASH
            AttributeName: Password
        - IndexName: UserName-index
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput:
            WriteCapacityUnits: 5
            ReadCapacityUnits: 5
          KeySchema:
          - KeyType: HASH
            AttributeName: UserName
        ProvisionedThroughput:
          WriteCapacityUnits: 5
          ReadCapacityUnits: 5
        TableName: ${opt:stage}-KODemoUsers
        KeySchema:
        - KeyType: HASH
          AttributeName: Id

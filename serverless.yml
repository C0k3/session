# Welcome to Serverless!
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: my-idp

provider:
  name: aws
  runtime: nodejs4.3
  cfLogs: true
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "dynamodb:*"
      Resource: "*"
  environment:
    STAGE: ${opt:stage}
  #profile: ko-playground-admin

package:
  exclude:
    - gulpfile.js
    - lambda_functions/**/*.test.js

functions:
  ping:
    handler: handler.ping
    events:
      - http:
          path: ping
          method: get
          cors: true
  getSession:
    handler: handler.getSession
    events:
        - http: 
            path: session
            method: GET
            cors: true
            authorizer: 
              name: authorizer
              resultTtlInSeconds: 3
              identitySource: method.request.header.Authorization
  createSession:
    handler: handler.createSession
    events:
        - http:
            path: session
            method: POST
            cors: true
            authorizer:
              name: clientIdAuthorizer
              resultTtlInSeconds: 300
              identitySource: method.request.header.x-koms-clientid
  refreshSession:
    handler: handler.refreshSession
    events:
        - http:
            path: session
            method: PUT
            cors: true
            authorizer:
              name: clientIdAuthorizer
              resultTtlInSeconds: 300
              identitySource: method.request.header.x-koms-clientid
  deleteSession:
    handler: handler.deleteSession
    events:
        - http:
            path: session
            method: DELETE
            cors: true
            authorizer: 
              name: clientIdAuthorizer
              resultTtlInSeconds: 300
              identitySource: method.request.header.x-koms-clientid
  createUser:
    handler: handler.createUser
    events:
        - http: 
            path: user
            method: POST
            cors: true
            authorizer: 
              name: clientIdAuthorizer
              resultTtlInSeconds: 300
              identitySource: method.request.header.x-koms-clientid
  getUser:
    handler: handler.getUser
    events:
        - http:
            path: user
            method: GET
            cors: true
            authorizer: 
              name: authorizer
              resultTtlInSeconds: 3
              identitySource: method.request.header.Authorization
  authorizer:
    handler: handler.authorizer
  clientIdAuthorizer:
    handler: handler.clientIdAuthorizer

resources:
  Resources:
    UserTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
        - AttributeName: Email
          AttributeType: S
        - AttributeName: Id
          AttributeType: S
        GlobalSecondaryIndexes:
        - IndexName: Email-index
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput:
            WriteCapacityUnits: 5
            ReadCapacityUnits: 5
          KeySchema:
          - KeyType: HASH
            AttributeName: Email
        ProvisionedThroughput:
          WriteCapacityUnits: 5
          ReadCapacityUnits: 5
        TableName: ${opt:stage}-KODemoUsers
        KeySchema:
        - KeyType: HASH
          AttributeName: Id
    TokenTable:
      Type: AWS::DynamoDB::Table
      Properties:        
        AttributeDefinitions:
        - AttributeName: PrincipalId
          AttributeType: S
        - AttributeName: RefreshToken
          AttributeType: S
        - AttributeName: AccessToken
          AttributeType: S
        GlobalSecondaryIndexes:
        - IndexName: PrincipalId-index
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput:
            WriteCapacityUnits: 5
            ReadCapacityUnits: 5
          KeySchema:
          - KeyType: HASH
            AttributeName: PrincipalId
        - IndexName: AccessToken-index
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput:
            WriteCapacityUnits: 5
            ReadCapacityUnits: 5
          KeySchema:
          - KeyType: HASH
            AttributeName: AccessToken
        ProvisionedThroughput:
          WriteCapacityUnits: 5
          ReadCapacityUnits: 5
        TableName: ${opt:stage}-KODemoTokens
        KeySchema:
        - KeyType: HASH
          AttributeName: RefreshToken
